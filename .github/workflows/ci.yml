name: Deploy to EC2

on:
  push:
    branches: ["main"]
  workflow_dispatch:

    
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v4
        with:
          version: 10.5.1
          
      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "pnpm"
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build application
        run: pnpm build
        
      - name: List build output
        run: ls -l
      
      - name: Create deployment archive
        run: |
          tar -czf deployment.tar.gz dist/ package.json pnpm-lock.yaml
          
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ secrets.EC2_SSH_PORT }}
          script: |
            # Create application directory if it doesn't exist
            sudo mkdir -p /var/www/myapp
            sudo chown -R ec2-user:ec2-user /var/www/myapp
            cd /var/www/myapp
            
            # Stop existing application (if running)
            pm2 stop myapp || true
            
            # Backup current deployment
            cp -r dist dist_backup_$(date +%Y%m%d_%H%M%S) || true
            
            # Clean old files
            rm -rf dist/ node_modules/
      
      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ secrets.EC2_SSH_PORT }}
          source: "deployment.tar.gz"
          target: "/tmp/"
      
      - name: Extract and start application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ secrets.EC2_SSH_PORT }}
          script: |
            cd /var/www/myapp
            
            # Extract new files
            tar -xzf /tmp/deployment.tar.gz
            
            # Install production dependencies (if needed)
            # pnpm install --prod
            
            # Start application with PM2
            pm2 start ecosystem.config.js || pm2 restart myapp
            
            # Save PM2 configuration
            pm2 save
            
            # Clean up
            rm /tmp/deployment.tar.gz
            
            echo "âœ… Deployment completed successfully!"
            
      - name: Health Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ secrets.EC2_SSH_PORT }}
          script: |
            sleep 5
            pm2 status myapp
            echo "ðŸš€ Application is running!"